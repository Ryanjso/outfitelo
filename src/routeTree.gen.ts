/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as RankingsImport } from './routes/rankings'
import { Route as IndexImport } from './routes/index'
import { Route as YearIndexImport } from './routes/$year/index'
import { Route as YearRankingsImport } from './routes/$year/rankings'
import { Route as YearLayoutImport } from './routes/$year/layout'

// Create/Update Routes

const RankingsRoute = RankingsImport.update({
  id: '/rankings',
  path: '/rankings',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const YearIndexRoute = YearIndexImport.update({
  id: '/$year/',
  path: '/$year/',
  getParentRoute: () => rootRoute,
} as any)

const YearRankingsRoute = YearRankingsImport.update({
  id: '/$year/rankings',
  path: '/$year/rankings',
  getParentRoute: () => rootRoute,
} as any)

const YearLayoutRoute = YearLayoutImport.update({
  id: '/$year/layout',
  path: '/$year/layout',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/rankings': {
      id: '/rankings'
      path: '/rankings'
      fullPath: '/rankings'
      preLoaderRoute: typeof RankingsImport
      parentRoute: typeof rootRoute
    }
    '/$year/layout': {
      id: '/$year/layout'
      path: '/$year/layout'
      fullPath: '/$year/layout'
      preLoaderRoute: typeof YearLayoutImport
      parentRoute: typeof rootRoute
    }
    '/$year/rankings': {
      id: '/$year/rankings'
      path: '/$year/rankings'
      fullPath: '/$year/rankings'
      preLoaderRoute: typeof YearRankingsImport
      parentRoute: typeof rootRoute
    }
    '/$year/': {
      id: '/$year/'
      path: '/$year'
      fullPath: '/$year'
      preLoaderRoute: typeof YearIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/rankings': typeof RankingsRoute
  '/$year/layout': typeof YearLayoutRoute
  '/$year/rankings': typeof YearRankingsRoute
  '/$year': typeof YearIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/rankings': typeof RankingsRoute
  '/$year/layout': typeof YearLayoutRoute
  '/$year/rankings': typeof YearRankingsRoute
  '/$year': typeof YearIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/rankings': typeof RankingsRoute
  '/$year/layout': typeof YearLayoutRoute
  '/$year/rankings': typeof YearRankingsRoute
  '/$year/': typeof YearIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/rankings' | '/$year/layout' | '/$year/rankings' | '/$year'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/rankings' | '/$year/layout' | '/$year/rankings' | '/$year'
  id:
    | '__root__'
    | '/'
    | '/rankings'
    | '/$year/layout'
    | '/$year/rankings'
    | '/$year/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  RankingsRoute: typeof RankingsRoute
  YearLayoutRoute: typeof YearLayoutRoute
  YearRankingsRoute: typeof YearRankingsRoute
  YearIndexRoute: typeof YearIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  RankingsRoute: RankingsRoute,
  YearLayoutRoute: YearLayoutRoute,
  YearRankingsRoute: YearRankingsRoute,
  YearIndexRoute: YearIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/rankings",
        "/$year/layout",
        "/$year/rankings",
        "/$year/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/rankings": {
      "filePath": "rankings.tsx"
    },
    "/$year/layout": {
      "filePath": "$year/layout.tsx"
    },
    "/$year/rankings": {
      "filePath": "$year/rankings.tsx"
    },
    "/$year/": {
      "filePath": "$year/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
